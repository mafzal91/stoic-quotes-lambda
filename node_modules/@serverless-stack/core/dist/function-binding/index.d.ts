declare type Secret = {
    value?: string;
    fallbackValue?: string;
};
export declare let ssmPrefix: string;
export declare const FALLBACK_STAGE = ".fallback";
export declare function setSsmPrefix(prefix?: string): void;
export declare function loadBindingEnvironment(app: string, stage: string, region: string): Promise<Record<string, string>>;
export declare function listSecrets(app: string, stage: string, region: string): Promise<Record<string, Secret>>;
export declare function getSecret(app: string, stage: string, region: string, name: string): Promise<Secret>;
export declare function setSecret(app: string, stage: string, region: string, name: string, value: string): Promise<void>;
export declare function setSecretFallback(app: string, region: string, name: string, value: string): Promise<void>;
export declare function removeSecret(app: string, stage: string, region: string, name: string): Promise<void>;
export declare function removeSecretFallback(app: string, region: string, name: string): Promise<void>;
export declare function buildEnvironmentKey(construct: string, name: string, prop: string): string;
export declare function buildSsmPath(app: string, stage: string, construct: string, name: string, prop: string): string;
export declare function normalizeId(name: string): string;
export * as FunctionBinding from "./index.js";
