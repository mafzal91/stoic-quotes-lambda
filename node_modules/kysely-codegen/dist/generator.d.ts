import { Dialect } from './dialect';
import { Introspector } from './introspector';
import { Logger } from './logger';
import { Serializer } from './serializer';
import { Transformer } from './transformer';
export declare type GeneratorOptions = {
    camelCase: boolean;
    connectionString: string;
    dialect: Dialect;
    introspector?: Introspector;
    logger?: Logger;
    serializer?: Serializer;
    transformer?: Transformer;
};
export declare type GenerateOptions = {
    excludePattern?: string;
    includePattern?: string;
    outFile: string;
    print?: boolean;
};
/**
 * Generates codegen output using specified options.
 */
export declare class Generator {
    readonly connectionString: string;
    readonly dialect: Dialect;
    readonly introspector: Introspector;
    readonly logger: Logger | undefined;
    readonly serializer: Serializer;
    readonly transformer: Transformer;
    constructor(options: GeneratorOptions);
    generate(options: GenerateOptions): Promise<void>;
}
